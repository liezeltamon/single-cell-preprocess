# module load R/4.3.2-gfbf-2023a
# sbatch -p long --mem=20G --cpus-per-task=2 --output=log.out --error=log.err --wrap="snakemake -s Snakefile --cores 2 -j 2" &

# %%
import os
import sys
import shutil
sys.path.append("scripts/utils")
from utils import params_to_cli_args

# %% Parameters

PROJECT_DIR = os.path.abspath("../../../..")
DATA_DIR = os.path.join(PROJECT_DIR, "data", "cellranger_dir")
CONFIG_FILENAME = "config"

CONFIG_PATH = os.path.join("../config", f"{CONFIG_FILENAME}.yml")
RESULTS_DIR = os.path.join(PROJECT_DIR, "results", "process_droplets_pipeline", CONFIG_FILENAME)
SAMPLES = [d for d in os.listdir(DATA_DIR) if os.path.isdir(os.path.join(DATA_DIR, d))]

# %% ----- MAIN -----

# Create RESULTS_DIR and copy config file
os.makedirs(RESULTS_DIR, exist_ok=True)
shutil.copy(CONFIG_PATH, os.path.join(RESULTS_DIR, f"{CONFIG_FILENAME}.yml"))

# Load configuration

configfile: CONFIG_PATH

# Load rules

include: "rules/empty_emptydrops"

# Optional messages, log and error handling

onstart:
    print("\n--- Analysis started ---\n")


onsuccess:
    print("\n--- Workflow finished! ---\n")


onerror:
    print("\n--- An error occurred! ---\n")


# Target rules

rule all:
    input:
        expand(
            os.path.join(RESULTS_DIR, "empty", "{sample}", "{filename}"),
            sample=SAMPLES,
            filename=[
                "blacklist.txt",
                "whitelist.txt",
                "output.qs",
                "plots.pdf",
                "session_info.txt"
            ]
        )
